{"version":3,"sources":["webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/marked/lib/marked.js","webpack:///./node_modules/dompurify/dist/purify.js"],"names":["module","exports","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","base64","unescape","encodeURIComponent","JSON","stringify","data","concat","sourceURLs","sources","source","sourceRoot","join","cssWithMappingToString","i","modules","mediaQuery","alreadyImportedModules","length","id","_i","push","fn","memo","stylesInDom","isOldIE","window","document","all","atob","apply","arguments","getElement","target","parent","styleTarget","querySelector","call","HTMLIFrameElement","contentDocument","head","e","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","__webpack_require__","addStylesToDom","styles","options","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","insertInto","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","undefined","attrs","type","nonce","nc","getNonce","addAttrs","el","Object","keys","forEach","key","setAttribute","obj","update","remove","result","transform","default","styleIndex","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","filter","Boolean","cssNode","childNodes","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","o","$1","test","global","root","block","newline","code","fences","hr","heading","blockquote","html","def","nptable","noop","table","lheading","_paragraph","text","Lexer","tokens","links","create","marked","defaults","rules","normal","pedantic","gfm","_label","_title","edit","getRegex","bullet","_tag","_comment","paragraph","merge","lex","src","prototype","token","top","next","loose","cap","bull","b","listStart","listItems","t","space","tag","l","isordered","istask","ischecked","exec","substring","lastToken","trimRight","codeBlockStyle","rtrim","lang","depth","header","splitCells","align","split","cells","ordered","start","match","RegExp","smartLists","slice","charAt","task","checked","sanitize","pre","sanitizer","escape","toLowerCase","title","charCodeAt","inline","autolink","url","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","TextRenderer","Parser","slugger","Slugger","seen","encode","escapeTest","escapeReplace","ch","replacements","escapeTestNoEncode","escapeReplaceNoEncode","_","n","String","fromCharCode","parseInt","regex","opt","name","val","cleanUrl","prot","decodeURIComponent","originIndependentUrl","baseUrls","resolveUrl","encodeURI","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","output","prevCapZero","out","inLink","inRawBlock","lastParenIndex","findClosingBracket","linkLen","outputLink","escapes","codespan","mangle","smartypants","image","Math","random","infostring","escaped","highlight","langPrefix","quote","level","raw","headerIds","headerPrefix","slug","xhtml","body","listitem","checkbox","tablerow","tablecell","flags","parse","inlineText","reverse","tok","pop","peek","parseText","row","cell","errMsg","silent","console","log","value","hasOwnProperty","originalSlug","&","<",">","\"","'","tableRow","count","offset","str","curr","c","invert","suffLen","currChar","substr","checkSanitizeDeprecation","warn","callback","pending","done","err","message","setOptions","getDefaults","parser","lexer","inlineLexer","freeze$1","freeze","x","svg","svgFilters","mathMl","freeze$2","html$1","svg$1","mathMl$1","xml","setPrototypeOf","apply$1","Reflect","addToSet","set","array","element","lcElement","isFrozen","clone","object","newObject","property","fun","thisValue","args","seal","MUSTACHE_EXPR","ERB_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","_typeof","Symbol","iterator","constructor","_toConsumableArray","arr","Array","isArray","arr2","from","arraySlice","getGlobal","_createTrustedTypesPolicy","trustedTypes","createPolicy","suffix","currentScript","hasAttribute","getAttribute","policyName","createHTML","html$$1","error","createDOMPurify","DOMPurify","version","removed","nodeType","isSupported","originalDocument","useDOMParser","removeTitle","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","_window$NamedNodeMap","NamedNodeMap","MozNamedAttrMap","Text","Comment","DOMParser","TrustedTypes","template","ownerDocument","trustedTypesPolicy","emptyHTML","_document","implementation","createNodeIterator","getElementsByTagName","createDocumentFragment","importNode","hooks","createHTMLDocument","documentMode","MUSTACHE_EXPR$$1","ERB_EXPR$$1","DATA_ATTR$$1","ARIA_ATTR$$1","IS_SCRIPT_OR_DATA$$1","ATTR_WHITESPACE$$1","IS_ALLOWED_URI$$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_JQUERY","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_DOM_IMPORT","SANITIZE_DOM","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","CONFIG","formElement","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","_forceRemove","node","outerHTML","_removeAttribute","attribute","getAttributeNode","removeAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","parseFromString","documentElement","_doc","firstElementChild","innerHTML","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","FILTER_ACCEPT","_isNode","nodeName","_executeHook","entryPoint","currentNode","hook","_sanitizeElements","elm","textContent","attributes","tagName","allowedTags","insertAdjacentHTML","htmlToInsert","cloneNode","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","idAttr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","_attr","namespaceURI","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","importedNode","oldNode","returnNode","TypeError","toStaticHTML","nodeIterator","serializedHTML","setConfig","clearConfig","isValidAttribute","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","factory"],"mappings":"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","file":"vue-5.js?v=a7e745c4640160e5e524","sourcesContent":["\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \"{\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      // eslint-disable-next-line prefer-destructuring\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = modules[_i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = \"(\".concat(item[2], \") and (\").concat(mediaQuery, \")\");\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot).concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2018, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: /^ {0,3}(`{3,}|~{3,})([^`~\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  nptable: noop,\n  table: noop,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} +')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}|~{3,})[^`\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  fences: noop, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    this.rules = block.gfm;\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      var lastToken = this.tokens[this.tokens.length - 1];\n      src = src.substring(cap[0].length);\n      // An indented code block cannot interrupt a paragraph.\n      if (lastToken && lastToken.type === 'paragraph') {\n        lastToken.text += '\\n' + cap[0].trimRight();\n      } else {\n        cap = cap[0].replace(/^ {4}/gm, '');\n        this.tokens.push({\n          type: 'code',\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic\n            ? rtrim(cap, '\\n')\n            : cap\n        });\n      }\n      continue;\n    }\n\n    // fences\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (cap = this.rules.nptable.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      listStart = {\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false\n      };\n\n      this.tokens.push(listStart);\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      listItems = [];\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull.length > 1 ? b.length === 1\n            : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          listStart.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        t = {\n          type: 'list_item_start',\n          task: istask,\n          checked: ischecked,\n          loose: loose\n        };\n\n        listItems.push(t);\n        this.tokens.push(t);\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      if (listStart.loose) {\n        l = listItems.length;\n        i = 0;\n        for (; i < l; i++) {\n          listItems[i].loose = true;\n        }\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (cap = this.rules.table.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*<\\[])\\*(?!\\*)|^_([^\\s<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\*])\\*(?!\\*|[^\\spunctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noop,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += escape(cap[1]);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = true;\n      } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = false;\n      }\n\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0];\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      var lastParenIndex = findClosingBracket(cap[2], '()');\n      if (lastParenIndex > -1) {\n        var linkLen = 4 + cap[1].length + lastParenIndex;\n        cap[2] = cap[2].substring(0, lastParenIndex);\n        cap[0] = cap[0].substring(0, linkLen).trim();\n        cap[3] = '';\n      }\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      src = src.substring(cap[0].length);\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (this.inRawBlock) {\n        out += this.renderer.text(this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]);\n      } else {\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n      }\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, infostring, escaped) {\n  var lang = (infostring || '').match(/\\S*/)[0];\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw, slugger) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + slugger.slug(raw)\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function(text) {\n  return text;\n};\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n};\n\nTextRenderer.prototype.br = function() {\n  return '';\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n  this.slugger = new Slugger();\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, { renderer: new TextRenderer() })\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  this.token = this.tokens.pop();\n  return this.token;\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)),\n        this.slugger);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n      var loose = this.token.loose;\n      var checked = this.token.checked;\n      var task = this.token.task;\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += !loose && this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n      return this.renderer.listitem(body, task, checked);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n    default: {\n      var errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n      if (this.options.silent) {\n        console.log(errMsg);\n      } else {\n        throw new Error(errMsg);\n      }\n    }\n  }\n};\n\n/**\n * Slugger generates header id\n */\n\nfunction Slugger() {\n  this.seen = {};\n}\n\n/**\n * Convert string to unique id\n */\n\nSlugger.prototype.slug = function(value) {\n  var slug = value\n    .toLowerCase()\n    .trim()\n    .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n    .replace(/\\s/g, '-');\n\n  if (this.seen.hasOwnProperty(slug)) {\n    var originalSlug = slug;\n    do {\n      this.seen[originalSlug]++;\n      slug = originalSlug + '-' + this.seen[originalSlug];\n    } while (this.seen.hasOwnProperty(slug));\n  }\n  this.seen[slug] = 0;\n\n  return slug;\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  if (encode) {\n    if (escape.escapeTest.test(html)) {\n      return html.replace(escape.escapeReplace, function(ch) { return escape.replacements[ch]; });\n    }\n  } else {\n    if (escape.escapeTestNoEncode.test(html)) {\n      return html.replace(escape.escapeReplaceNoEncode, function(ch) { return escape.replacements[ch]; });\n    }\n  }\n\n  return html;\n}\n\nescape.escapeTest = /[&<>\"']/;\nescape.escapeReplace = /[&<>\"']/g;\nescape.replacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\nescape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nescape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function(match, offset, str) {\n        var escaped = false,\n            curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  if (str.length === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  var suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < str.length) {\n    var currChar = str.charAt(str.length - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, str.length - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  var level = 0;\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    checkSanitizeDeprecation(opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    xhtml: false\n  };\n};\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.DOMPurify = factory());\n}(this, (function () { 'use strict';\n\nvar freeze$1 = Object.freeze || function (x) {\n  return x;\n};\n\nvar html = freeze$1(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n// SVG\nvar svg = freeze$1(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'audio', 'canvas', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'video', 'view', 'vkern']);\n\nvar svgFilters = freeze$1(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\nvar mathMl = freeze$1(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);\n\nvar text = freeze$1(['#text']);\n\nvar freeze$2 = Object.freeze || function (x) {\n  return x;\n};\n\nvar html$1 = freeze$2(['accept', 'action', 'align', 'alt', 'autocomplete', 'background', 'bgcolor', 'border', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'coords', 'crossorigin', 'datetime', 'default', 'dir', 'disabled', 'download', 'enctype', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'integrity', 'ismap', 'label', 'lang', 'list', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'multiple', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns']);\n\nvar svg$1 = freeze$2(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n\nvar mathMl$1 = freeze$2(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n\nvar xml = freeze$2(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\nvar hasOwnProperty = Object.hasOwnProperty;\nvar setPrototypeOf = Object.setPrototypeOf;\n\nvar _ref$1 = typeof Reflect !== 'undefined' && Reflect;\nvar apply$1 = _ref$1.apply;\n\nif (!apply$1) {\n  apply$1 = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\n/* Add properties to a lookup table */\nfunction addToSet(set, array) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  var l = array.length;\n  while (l--) {\n    var element = array[l];\n    if (typeof element === 'string') {\n      var lcElement = element.toLowerCase();\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!Object.isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nfunction clone(object) {\n  var newObject = {};\n\n  var property = void 0;\n  for (property in object) {\n    if (apply$1(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\nvar seal = Object.seal || function (x) {\n  return x;\n};\n\nvar MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nvar ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\nvar DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nvar ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nvar IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nvar IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nvar ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g // eslint-disable-line no-control-regex\n);\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar _ref = typeof Reflect !== 'undefined' && Reflect;\nvar apply = _ref.apply;\n\nvar arraySlice = Array.prototype.slice;\nvar freeze = Object.freeze;\n\nvar getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nvar _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n  if ((typeof trustedTypes === 'undefined' ? 'undefined' : _typeof(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  var suffix = null;\n  var ATTR_NAME = 'data-tt-policy-suffix';\n  if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML: function createHTML(html$$1) {\n        return html$$1;\n      }\n    });\n  } catch (error) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\n\nfunction createDOMPurify() {\n  var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n  var DOMPurify = function DOMPurify(root) {\n    return createDOMPurify(root);\n  };\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = '1.0.11';\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  var originalDocument = window.document;\n  var useDOMParser = false;\n  var removeTitle = false;\n\n  var document = window.document;\n  var DocumentFragment = window.DocumentFragment,\n      HTMLTemplateElement = window.HTMLTemplateElement,\n      Node = window.Node,\n      NodeFilter = window.NodeFilter,\n      _window$NamedNodeMap = window.NamedNodeMap,\n      NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n      Text = window.Text,\n      Comment = window.Comment,\n      DOMParser = window.DOMParser,\n      TrustedTypes = window.TrustedTypes;\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n\n  if (typeof HTMLTemplateElement === 'function') {\n    var template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  var trustedTypesPolicy = _createTrustedTypesPolicy(TrustedTypes, originalDocument);\n  var emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n  var _document = document,\n      implementation = _document.implementation,\n      createNodeIterator = _document.createNodeIterator,\n      getElementsByTagName = _document.getElementsByTagName,\n      createDocumentFragment = _document.createDocumentFragment;\n  var importNode = originalDocument.importNode;\n\n\n  var hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = implementation && typeof implementation.createHTMLDocument !== 'undefined' && document.documentMode !== 9;\n\n  var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,\n      ERB_EXPR$$1 = ERB_EXPR,\n      DATA_ATTR$$1 = DATA_ATTR,\n      ARIA_ATTR$$1 = ARIA_ATTR,\n      IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;\n  var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n\n  var ALLOWED_TAGS = null;\n  var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(html), _toConsumableArray(svg), _toConsumableArray(svgFilters), _toConsumableArray(mathMl), _toConsumableArray(text)));\n\n  /* Allowed attribute names */\n  var ALLOWED_ATTR = null;\n  var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray(html$1), _toConsumableArray(svg$1), _toConsumableArray(mathMl$1), _toConsumableArray(xml)));\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  var FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  var FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  var ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  var ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for jQuery's $() factory? */\n  var SAFE_FOR_JQUERY = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  var SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  var WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  var SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  var FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  var RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  var RETURN_DOM_FRAGMENT = false;\n\n  /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n   * `Node` is imported into the current `Document`. If this flag is not enabled the\n   * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n   * DOMPurify. */\n  var RETURN_DOM_IMPORT = false;\n\n  /* Output should be free from DOM clobbering attacks? */\n  var SANITIZE_DOM = true;\n\n  /* Keep element content when removing element? */\n  var KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  var IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  var USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  var FORBID_CONTENTS = addToSet({}, ['audio', 'head', 'math', 'script', 'style', 'template', 'svg', 'video']);\n\n  /* Tags that are safe for data: URIs */\n  var DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image']);\n\n  /* Attributes safe for values like \"javascript:\" */\n  var URI_SAFE_ATTRIBUTES = null;\n  var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'summary', 'title', 'value', 'style', 'xmlns']);\n\n  /* Keep a reference to config to pass to hooks */\n  var CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  var formElement = document.createElement('form');\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  var _parseConfig = function _parseConfig(cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {\n      cfg = {};\n    }\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n    URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet({}, cfg.ADD_URI_SAFE_ATTR) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_JQUERY = cfg.SAFE_FOR_JQUERY || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n\n    IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(text)));\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html);\n        addToSet(ALLOWED_ATTR, html$1);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg);\n        addToSet(ALLOWED_ATTR, svg$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl);\n        addToSet(ALLOWED_ATTR, mathMl$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  var _forceRemove = function _forceRemove(node) {\n    DOMPurify.removed.push({ element: node });\n    try {\n      node.parentNode.removeChild(node);\n    } catch (error) {\n      node.outerHTML = emptyHTML;\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  var _removeAttribute = function _removeAttribute(name, node) {\n    try {\n      DOMPurify.removed.push({\n        attribute: node.getAttributeNode(name),\n        from: node\n      });\n    } catch (error) {\n      DOMPurify.removed.push({\n        attribute: null,\n        from: node\n      });\n    }\n\n    node.removeAttribute(name);\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  var _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    var doc = void 0;\n    var leadingWhitespace = void 0;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      var matches = dirty.match(/^[\\s]+/);\n      leadingWhitespace = matches && matches[0];\n      if (leadingWhitespace) {\n        dirty = dirty.slice(leadingWhitespace.length);\n      }\n    }\n\n    /* Use DOMParser to workaround Firefox bug (see comment below) */\n    if (useDOMParser) {\n      try {\n        doc = new DOMParser().parseFromString(dirty, 'text/html');\n      } catch (error) {}\n    }\n\n    /* Remove title to fix a mXSS bug in older MS Edge */\n    if (removeTitle) {\n      addToSet(FORBID_TAGS, ['title']);\n    }\n\n    /* Otherwise use createHTMLDocument, because DOMParser is unsafe in\n    Safari (see comment below) */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createHTMLDocument('');\n      var _doc = doc,\n          body = _doc.body;\n\n      body.parentNode.removeChild(body.parentNode.firstElementChild);\n      body.outerHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    }\n\n    if (leadingWhitespace) {\n      doc.body.insertBefore(document.createTextNode(leadingWhitespace), doc.body.childNodes[0] || null);\n    }\n\n    /* Work on whole document or just its body */\n    return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n  };\n\n  // Firefox uses a different parser for innerHTML rather than\n  // DOMParser (see https://bugzilla.mozilla.org/show_bug.cgi?id=1205631)\n  // which means that you *must* use DOMParser, otherwise the output may\n  // not be safe if used in a document.write context later.\n  //\n  // So we feature detect the Firefox bug and use the DOMParser if necessary.\n  //\n  // MS Edge, in older versions, is affected by an mXSS behavior. The second\n  // check tests for the behavior and fixes it if necessary.\n  if (DOMPurify.isSupported) {\n    (function () {\n      try {\n        var doc = _initDocument('<svg><p><style><img src=\"</style><img src=x onerror=1//\">');\n        if (doc.querySelector('svg img')) {\n          useDOMParser = true;\n        }\n      } catch (error) {}\n    })();\n\n    (function () {\n      try {\n        var doc = _initDocument('<x/><title>&lt;/title&gt;&lt;img&gt;');\n        if (doc.querySelector('title').innerHTML.match(/<\\/title/)) {\n          removeTitle = true;\n        }\n      } catch (error) {}\n    })();\n  }\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  var _createIterator = function _createIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, function () {\n      return NodeFilter.FILTER_ACCEPT;\n    }, false);\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  var _isClobbered = function _isClobbered(elm) {\n    if (elm instanceof Text || elm instanceof Comment) {\n      return false;\n    }\n\n    if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function') {\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  var _isNode = function _isNode(obj) {\n    return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? obj instanceof Node : obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && typeof obj.nodeType === 'number' && typeof obj.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    hooks[entryPoint].forEach(function (hook) {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  // eslint-disable-next-line complexity\n  var _sanitizeElements = function _sanitizeElements(currentNode) {\n    var content = void 0;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    var tagName = currentNode.nodeName.toLowerCase();\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName: tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Keep content except for black-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName] && typeof currentNode.insertAdjacentHTML === 'function') {\n        try {\n          var htmlToInsert = currentNode.innerHTML;\n          currentNode.insertAdjacentHTML('AfterEnd', trustedTypesPolicy ? trustedTypesPolicy.createHTML(htmlToInsert) : htmlToInsert);\n        } catch (error) {}\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove in case a noscript/noembed XSS is suspected */\n    if (tagName === 'noscript' && currentNode.innerHTML.match(/<\\/noscript/i)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    if (tagName === 'noembed' && currentNode.innerHTML.match(/<\\/noembed/i)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Convert markup to cover jQuery behavior */\n    if (SAFE_FOR_JQUERY && !currentNode.firstElementChild && (!currentNode.content || !currentNode.content.firstElementChild) && /</g.test(currentNode.textContent)) {\n      DOMPurify.removed.push({ element: currentNode.cloneNode() });\n      if (currentNode.innerHTML) {\n        currentNode.innerHTML = currentNode.innerHTML.replace(/</g, '&lt;');\n      } else {\n        currentNode.innerHTML = currentNode.textContent.replace(/</g, '&lt;');\n      }\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = content.replace(MUSTACHE_EXPR$$1, ' ');\n      content = content.replace(ERB_EXPR$$1, ' ');\n      if (currentNode.textContent !== content) {\n        DOMPurify.removed.push({ element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && DATA_ATTR$$1.test(lcName)) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && ARIA_ATTR$$1.test(lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      return false;\n\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (IS_ALLOWED_URI$$1.test(value.replace(ATTR_WHITESPACE$$1, ''))) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if ((lcName === 'src' || lcName === 'xlink:href') && lcTag !== 'script' && value.indexOf('data:') === 0 && DATA_URI_TAGS[lcTag]) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (ALLOW_UNKNOWN_PROTOCOLS && !IS_SCRIPT_OR_DATA$$1.test(value.replace(ATTR_WHITESPACE$$1, ''))) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    var attr = void 0;\n    var value = void 0;\n    var lcName = void 0;\n    var idAttr = void 0;\n    var l = void 0;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    var attributes = currentNode.attributes;\n\n    /* Check if we have attributes; if not we might have a text node */\n\n    if (!attributes) {\n      return;\n    }\n\n    var hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      var _attr = attr,\n          name = _attr.name,\n          namespaceURI = _attr.namespaceURI;\n\n      value = attr.value.trim();\n      lcName = name.toLowerCase();\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n\n      /* Remove attribute */\n      // Safari (iOS + Mac), last tested v8.0.5, crashes if you try to\n      // remove a \"name\" attribute from an <img> tag that has an \"id\"\n      // attribute at the time.\n      if (lcName === 'name' && currentNode.nodeName === 'IMG' && attributes.id) {\n        idAttr = attributes.id;\n        attributes = apply(arraySlice, attributes, []);\n        _removeAttribute('id', currentNode);\n        _removeAttribute(name, currentNode);\n        if (attributes.indexOf(idAttr) > l) {\n          currentNode.setAttribute('id', idAttr.value);\n        }\n      } else if (\n      // This works around a bug in Safari, where input[type=file]\n      // cannot be dynamically set after type has been removed\n      currentNode.nodeName === 'INPUT' && lcName === 'type' && value === 'file' && hookEvent.keepAttr && (ALLOWED_ATTR[lcName] || !FORBID_ATTR[lcName])) {\n        continue;\n      } else {\n        // This avoids a crash in Safari v9.0 with double-ids.\n        // The trick is to first set the id to be empty and then to\n        // remove the attribute\n        if (name === 'id') {\n          currentNode.setAttribute(name, '');\n        }\n\n        _removeAttribute(name, currentNode);\n      }\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = value.replace(MUSTACHE_EXPR$$1, ' ');\n        value = value.replace(ERB_EXPR$$1, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      var lcTag = currentNode.nodeName.toLowerCase();\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        DOMPurify.removed.pop();\n      } catch (error) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    var shadowNode = void 0;\n    var shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg) {\n    var body = void 0;\n    var importedNode = void 0;\n    var currentNode = void 0;\n    var oldNode = void 0;\n    var returnNode = void 0;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    if (!dirty) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw new TypeError('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw new TypeError('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    if (IN_PLACE) {\n      /* No special handling necessary for in-place sanitization */\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!-->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : emptyHTML;\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (RETURN_DOM_IMPORT) {\n        /* AdoptNode() is not used because internal state is not reset\n               (e.g. the past names map of a HTMLFormElement), this is safe\n               in theory but we would rather not risk another attack vector.\n               The state that is cloned by importNode() is explicitly defined\n               by the specs. */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = serializedHTML.replace(MUSTACHE_EXPR$$1, ' ');\n      serializedHTML = serializedHTML.replace(ERB_EXPR$$1, ' ');\n    }\n\n    return trustedTypesPolicy ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    var lcTag = tag.toLowerCase();\n    var lcName = attr.toLowerCase();\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    hooks[entryPoint].push(hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint].pop();\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nvar purify = createDOMPurify();\n\nreturn purify;\n\n})));\n//# sourceMappingURL=purify.js.map\n"],"sourceRoot":""}